function Matrix(){this.content=new Array;this.rows=0;this.cols=0;if(arguments[0] instanceof Matrix){var b=arguments[0].content;this.content=b.slice(0);this.rows=arguments[0].rows;this.cols=arguments[0].cols}else{if(!isNaN(arguments[0])&&arguments.length>=2&&arguments.length<=3&&!isNaN(arguments[1])&&arguments[0]%1===0&&arguments[1]%1===0&&arguments[0]>0&&arguments[1]>0){if(arguments.length===3&&arguments[2] instanceof Array){if(arguments[2].length===arguments[0]*arguments[1]){this.rows=arguments[0];this.cols=arguments[1];for(var a=0;a<arguments[2].length;a++){if(isNaN(arguments[2][a])){throw"Element ("+row+", "+col+") of the Array is not numeric."}else{this.content.push(arguments[2][a])}}}else{throw"Array can't fill matrix of dimensions "+arguments[0]+" X "+arguments[1]+"."}}else{this.rows=arguments[0];this.cols=arguments[1];for(var a=0;a<this.rows*this.cols;a++){this.content[a]=0}}}else{throw"Wrong arguments."}}}Matrix.prototype.get=function(b,a){if(isNaN(b)||isNaN(a)||b<0||a<0||b>=this.rows||a>=this.cols){throw"Wrong coordinates."}else{return this.content[b*this.cols+a]}};Matrix.prototype.set=function(c,a,b){if(isNaN(c)||isNaN(a)||c<0||a<0||c>=this.rows||a>=this.cols){throw"Wrong coordinates."}else{if(isNaN(b)){throw"Value must be a number."}else{this.content[c*this.cols+a]=b;return this}}};Matrix.prototype.setRow=function(c,a){if(!isNaN(c)&&c%1===0&&c<this.rows&&a instanceof Array&&a.length==this.cols){for(var b=0;b<a.length;b++){if(isNaN(a[b])){throw"Element on index "+b+" of vector is not a number."}else{this.content[c*this.cols+b]=a[b]}}return this}else{throw"Wrong arguments."}};Matrix.prototype.getRow=function(a){if(!isNaN(a)&&a%1===0&&a<this.rows){return this.content.slice(a*this.cols,a*this.cols+this.cols)}else{throw"Wrong argument."}};Matrix.prototype.setCol=function(c,a){if(!isNaN(c)&&c%1===0&&c<this.cols&&a instanceof Array&&a.length==this.rows){for(var b=0;b<a.length;b++){if(isNaN(a[b])){throw"Element on index "+b+" of vector is not a number."}else{this.content[b*this.cols+c]=a[b]}}return this}else{throw"Wrong arguments."}};Matrix.prototype.getCol=function(b){if(!isNaN(b)&&b%1===0&&b<this.cols){var a=[];for(var c=0;c<this.rows;c++){a.push(this.content[c*this.cols+b])}return a}else{throw"Wrong argument."}};Matrix.prototype.toArray=function(){return this.content.slice(0)};Matrix.prototype.getArrayRef=function(){return this.content};Matrix.prototype.dim=function(){return{rows:this.rows,cols:this.cols}};Matrix.prototype.mul=function(){var b=new Matrix(this);for(var e=0;e<arguments.length;e++){if(isNaN(arguments[e])){var a;if(arguments[e] instanceof Matrix){a=arguments[e];if(b.cols===a.rows){var d=new Matrix(b.rows,a.cols);for(var g=0;g<b.rows;g++){for(var c=0;c<a.cols;c++){for(var f=0;f<b.cols;f++){d.content[g*d.cols+c]+=b.content[g*b.cols+f]*a.content[f*a.cols+c]}}}b=d}else{throw"Incopatible matrix sizes on index - "+e+"."}}else{throw"Wrong argument type on index - "+e+"."}}else{for(var h=0;h<b.content.length;h++){b.content[h]*=arguments[e]}}}return b};Matrix.prototype.add=function(){var a=new Matrix(this);for(var d=0;d<arguments.length;d++){if(arguments[d] instanceof Matrix){matrix=arguments[d];if(a.cols===matrix.cols&&a.rows===matrix.rows){var c=new Matrix(a.rows,a.cols);for(var e=0;e<a.rows;e++){for(var b=0;b<a.cols;b++){c.content[e*c.cols+b]=a.content[e*a.cols+b]+matrix.content[e*matrix.cols+b]}}a=c}else{throw"Incopatible matrix sizes on index - "+d+"."}}else{throw"Wrong argument type on index - "+d+"."}}return a};Matrix.prototype.sub=function(){var a=new Matrix(this);for(var d=0;d<arguments.length;d++){if(arguments[d] instanceof Matrix){matrix=arguments[d];if(a.cols===matrix.cols&&a.rows===matrix.rows){var c=new Matrix(a.rows,a.cols);for(var e=0;e<a.rows;e++){for(var b=0;b<a.cols;b++){c.content[e*c.cols+b]=a.content[e*a.cols+b]-matrix.content[e*matrix.cols+b]}}a=c}else{throw"Incopatible matrix sizes on index - "+d+"."}}else{throw"Wrong argument type on index - "+d+"."}}return a};Matrix.prototype.transpose=function(){var a=new Matrix(this.cols,this.rows);for(var c=0;c<this.rows;c++){for(var b=0;b<this.cols;b++){a.content[b*a.cols+c]=this.content[c*this.cols+b]}}return a};Matrix.prototype.det=function(){if(this.rows===this.cols){if(this.rows>2){var b=0;for(var a=0;a<this.cols;a++){b+=this.content[a]*this.cofactor(0,a)}return b}else{if(this.rows===2){return this.content[0]*this.content[3]-this.content[1]*this.content[2]}else{if(this.rows===1){return this.content[0]}else{throw"Wrong matrix size."}}}}else{throw"This matrix is not a square matrix."}};Matrix.prototype.submatrix=function(c,b){if(isNaN(c)||isNaN(b)||c%1!==0||b%1!==0){throw"Row and col must be integer values."}else{if(c>=this.rows||b>=this.cols||c<0||b<0){throw"Index out of bounds."}else{var a=new Matrix(this);a.content.splice(c*a.cols,a.cols);a.rows-=1;a.cols-=1;for(var d=0;d<a.rows;d++){a.content.splice(d*a.cols+b,1)}return a}}};Matrix.prototype.min=function(b,a){return this.submatrix(b,a).det()};Matrix.prototype.cofactor=function(b,a){return this.min(b,a)*Math.pow(-1,b+a+2)};Matrix.prototype.trace=function(){if(this.cols===this.rows){var a=0;for(var b=0;b<this.rows;b++){a+=this.content[b*this.rows+b]}return a}else{throw"This matrix is not a square matrix."}};Matrix.prototype.inv=function(){var b=this.det();output=new Matrix(this.rows,this.cols);if(b!==0){for(var c=0;c<this.rows;c++){for(var a=0;a<this.cols;a++){output.content[c*output.cols+a]=this.cofactor(c,a)}}return output.transpose().mul(1/b)}else{throw"Determinant is equal 0."}};Matrix.idenity=function(b){if(isNaN(b)||b%1!==0||b<=0){throw"Size must be an positive integer."}else{var a=new Matrix(b,b);for(index=0;index<b;index++){a.content[index*a.cols+index]=1}return a}};Matrix.diag=function(b){if(b instanceof Array){var a=new Matrix(b.length,b.length);for(index=0;index<b.length;index++){if(isNaN(b[index])){throw"Vector element is not numeric on index "+index+"."}else{a.content[index*a.cols+index]=b[index]}}return a}else{throw"Vector must be an array."}};Matrix.rowVector=function(b){if(b instanceof Array){var a=new Matrix(1,b.length);for(index=0;index<b.length;index++){if(isNaN(b[index])){throw"Vector element is not numeric on index "+index+"."}else{a.content[index]=b[index]}}return a}else{throw"Vector must be an array."}};Matrix.colVector=function(b){if(b instanceof Array){var a=new Matrix(b.length,1);for(index=0;index<b.length;index++){if(isNaN(b[index])){throw"Vector element is not numeric on index "+index+"."}else{a.content[index]=b[index]}}return a}else{throw"Vector must be an array."}};